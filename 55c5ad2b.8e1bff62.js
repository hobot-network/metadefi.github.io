(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{151:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return m})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return f}));var n=a(1),l=a(6),s=(a(0),a(242)),r=a(247),i=a(248),c=a(244),o=a(245),u=a(246),m={delivery_guarantee:"best_effort",description:"The Vector `socket` sink streams `log` events to a socket, such as a TCP, UDP, or Unix socket.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22sink%3A+socket%22",operating_systems:["linux","macos","windows"],sidebar_label:'socket|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/sinks/socket.rs",status:"prod-ready",title:"Socket Sink",unsupported_operating_systems:[]},d={id:"reference/sinks/socket",title:"Socket Sink",description:"The Vector `socket` sink streams `log` events to a socket, such as a TCP, UDP, or Unix socket.",source:"@site/docs/reference/sinks/socket.md",permalink:"/docs/reference/sinks/socket",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/sinks/socket.md",sidebar_label:'socket|["log"]',sidebar:"docs",previous:{title:"Prometheus Sink",permalink:"/docs/reference/sinks/prometheus"},next:{title:"Splunk HEC Sink",permalink:"/docs/reference/sinks/splunk_hec"}},b=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"address",id:"address",children:[]},{value:"buffer",id:"buffer",children:[]},{value:"encoding",id:"encoding",children:[]},{value:"healthcheck",id:"healthcheck",children:[]},{value:"mode",id:"mode",children:[]},{value:"tls",id:"tls",children:[]}]},{value:"How It Works",id:"how-it-works",children:[{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Health Checks",id:"health-checks",children:[]},{value:"Streaming",id:"streaming",children:[]}]}],p={rightToc:b},h="wrapper";function f(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(s.b)(h,Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"The Vector ",Object(s.b)("inlineCode",{parentName:"p"},"socket")," sink ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#streaming"}),"streams")," ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(s.b)("inlineCode",{parentName:"a"},"log"))," events to a socket, such as a TCP, UDP, or Unix socket."),Object(s.b)("h2",{id:"configuration"},"Configuration"),Object(s.b)(r.a,{block:!0,defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"common",mdxType:"TabItem"},Object(s.b)(c.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[sinks.my_sink_id]\n  type = "socket" # must be: "socket"\n  inputs = ["my-source-id"] # example\n  address = "92.12.333.224:5000" # example\n  mode = "tcp" # must be: "tcp"\n'))),Object(s.b)(i.a,{value:"advanced",mdxType:"TabItem"},Object(s.b)(c.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[sinks.my_sink_id]\n  # REQUIRED - General\n  type = "socket" # must be: "socket"\n  inputs = ["my-source-id"] # example\n  address = "92.12.333.224:5000" # example\n  mode = "tcp" # must be: "tcp"\n\n  # OPTIONAL - General\n  healthcheck = true # default\n\n  # OPTIONAL - requests\n  encoding = "json" # example, no default, enum\n\n  # OPTIONAL - Buffer\n  [sinks.my_sink_id.buffer]\n    type = "memory" # default, enum\n    max_events = 500 # default, events, relevant when type = "memory"\n    max_size = 104900000 # example, no default, bytes, relevant when type = "disk"\n    when_full = "block" # default, enum\n\n  # OPTIONAL - Tls\n  [sinks.my_sink_id.tls]\n    ca_path = "/path/to/certificate_authority.crt" # example, no default\n    crt_path = "/path/to/host_certificate.crt" # example, no default\n    enabled = false # default\n    key_pass = "PassWord1" # example, no default\n    key_path = "/path/to/host_certificate.key" # example, no default\n    verify_certificate = true # default\n    verify_hostname = true # default\n')))),Object(s.b)("h2",{id:"options"},"Options"),Object(s.b)(o.a,{filters:!0,mdxType:"Fields"},Object(s.b)(u.a,{common:!0,defaultValue:null,enumValues:null,examples:["92.12.333.224:5000"],name:"address",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"address"},"address"),Object(s.b)("p",null,"The address to bind to.")),Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:null,examples:[],name:"buffer",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"buffer"},"buffer"),Object(s.b)("p",null,"Configures the sink buffer behavior."),Object(s.b)(o.a,{filters:!1,mdxType:"Fields"},Object(s.b)(u.a,{common:!1,defaultValue:500,enumValues:null,examples:[500],name:"max_events",path:"buffer",relevantWhen:{type:"memory"},required:!1,templateable:!1,type:"int",unit:"events",mdxType:"Field"},Object(s.b)("h4",{id:"max_events"},"max_events"),Object(s.b)("p",null,"The maximum number of ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/#event"}),"events")," allowed in the buffer.")),Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:null,examples:[1049e5],name:"max_size",path:"buffer",relevantWhen:{type:"disk"},required:!1,templateable:!1,type:"int",unit:"bytes",mdxType:"Field"},Object(s.b)("h4",{id:"max_size"},"max_size"),Object(s.b)("p",null,"The maximum size of the buffer on the disk.")),Object(s.b)(u.a,{common:!1,defaultValue:"memory",enumValues:{memory:"Stores the sink's buffer in memory. This is more performant (~3x), but less durable. Data will be lost if Vector is restarted abruptly.",disk:"Stores the sink's buffer on disk. This is less performance (~3x),  but durable. Data will not be lost between restarts."},examples:["memory","disk"],name:"type",path:"buffer",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"type"},"type"),Object(s.b)("p",null,"The buffer's type / location. ",Object(s.b)("inlineCode",{parentName:"p"},"disk")," buffers are persistent and will be retained between restarts.")),Object(s.b)(u.a,{common:!1,defaultValue:"block",enumValues:{block:"Applies back pressure when the buffer is full. This prevents data loss, but will cause data to pile up on the edge.",drop_newest:"Drops new data as it's received. This data is lost. This should be used when performance is the highest priority."},examples:["block","drop_newest"],name:"when_full",path:"buffer",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"when_full"},"when_full"),Object(s.b)("p",null,"The behavior when the buffer becomes full.")))),Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:{json:"Each event is encoded into JSON and the payload is represented as a JSON array.",text:"Each event is encoded into text via the `message` key and the payload is new line delimited."},examples:["json","text"],name:"encoding",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"encoding"},"encoding"),Object(s.b)("p",null,"The encoding format used to serialize the events before outputting.")),Object(s.b)(u.a,{common:!1,defaultValue:!0,enumValues:null,examples:[!0,!1],name:"healthcheck",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"healthcheck"},"healthcheck"),Object(s.b)("p",null,"Enables/disables the sink healthcheck upon start. See ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#health-checks"}),"Health Checks")," for more info.")),Object(s.b)(u.a,{common:!0,defaultValue:null,enumValues:{tcp:"Use the TCP protocol."},examples:["tcp"],name:"mode",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"mode"},"mode"),Object(s.b)("p",null,"The type of socket to use. Currently only ",Object(s.b)("inlineCode",{parentName:"p"},"tcp")," is valid.")),Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:null,examples:[],name:"tls",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"tls"},"tls"),Object(s.b)("p",null,"Configures the TLS options for connections from this sink."),Object(s.b)(o.a,{filters:!1,mdxType:"Fields"},Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:null,examples:["/path/to/certificate_authority.crt"],name:"ca_path",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"ca_path"},"ca_path"),Object(s.b)("p",null,"Absolute path to an additional CA certificate file, in DER or PEM format (X.509).")),Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:null,examples:["/path/to/host_certificate.crt"],name:"crt_path",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"crt_path"},"crt_path"),Object(s.b)("p",null,"Absolute path to a certificate file used to identify this connection, in DER or PEM format (X.509) or PKCS#12. If this is set and is not a PKCS#12 archive, ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#key_path"}),Object(s.b)("inlineCode",{parentName:"a"},"key_path"))," must also be set.")),Object(s.b)(u.a,{common:!1,defaultValue:!1,enumValues:null,examples:[!1,!0],name:"enabled",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"enabled"},"enabled"),Object(s.b)("p",null,"Enable TLS during connections to the remote.")),Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:null,examples:["PassWord1"],name:"key_pass",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"key_pass"},"key_pass"),Object(s.b)("p",null,"Pass phrase used to unlock the encrypted key file. This has no effect unless ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#key_pass"}),Object(s.b)("inlineCode",{parentName:"a"},"key_pass"))," above is set.")),Object(s.b)(u.a,{common:!1,defaultValue:null,enumValues:null,examples:["/path/to/host_certificate.key"],name:"key_path",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"key_path"},"key_path"),Object(s.b)("p",null,"Absolute path to a certificate key file used to identify this connection, in DER or PEM format (PKCS#8). If this is set, ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#crt_path"}),Object(s.b)("inlineCode",{parentName:"a"},"crt_path"))," must also be set.")),Object(s.b)(u.a,{common:!1,defaultValue:!0,enumValues:null,examples:[!0,!1],name:"verify_certificate",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"verify_certificate"},"verify_certificate"),Object(s.b)("p",null,"If ",Object(s.b)("inlineCode",{parentName:"p"},"true")," (the default), Vector will validate the TLS certificate of the remote host. Do NOT set this to ",Object(s.b)("inlineCode",{parentName:"p"},"false")," unless you understand the risks of not verifying the remote certificate.")),Object(s.b)(u.a,{common:!1,defaultValue:!0,enumValues:null,examples:[!0,!1],name:"verify_hostname",path:"tls",relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(s.b)("h4",{id:"verify_hostname"},"verify_hostname"),Object(s.b)("p",null,"If ",Object(s.b)("inlineCode",{parentName:"p"},"true")," (the default), Vector will validate the configured remote host name against the remote host's TLS certificate. Do NOT set this to ",Object(s.b)("inlineCode",{parentName:"p"},"false")," unless you understand the risks of not verifying the remote hostname."))))),Object(s.b)("h2",{id:"how-it-works"},"How It Works"),Object(s.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(s.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(s.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(s.b)("p",null,"You can learn more in the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."),Object(s.b)("h3",{id:"health-checks"},"Health Checks"),Object(s.b)("p",null,"Health checks ensure that the downstream service is accessible and ready to\naccept data. This check is performed upon sink initialization.\nIf the health check fails an error will be logged and Vector will proceed to\nstart."),Object(s.b)("h4",{id:"require-health-checks"},"Require Health Checks"),Object(s.b)("p",null,"If you'd like to exit immediately upon a health check failure, you can\npass the ",Object(s.b)("inlineCode",{parentName:"p"},"--require-healthy")," flag:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector --config /etc/vector/vector.toml --require-healthy\n")),Object(s.b)("h4",{id:"disable-health-checks"},"Disable Health Checks"),Object(s.b)("p",null,"If you'd like to disable health checks for this sink you can set the\n",Object(s.b)("inlineCode",{parentName:"p"},"healthcheck")," option to ",Object(s.b)("inlineCode",{parentName:"p"},"false"),"."),Object(s.b)("h3",{id:"streaming"},"Streaming"),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"socket")," sink streams data on a real-time\nevent-by-event basis. It does not batch data."))}f.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,s]=Object(n.useState)(!1),[r,i]=Object(n.useState)(!1),[c,o]=Object(n.useState)(null);let u=Array.isArray(e)?e:[e],m=u.some(e=>e.props.common),d=u.some(e=>e.props.required),b=u;return a&&(b=b.filter(e=>e.props.common)),r&&(b=b.filter(e=>e.props.required)),c&&(b=b.filter(e=>e.props.name.toLowerCase().includes(c.toLowerCase()))),l.a.createElement("div",{className:"fields"},u.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},b.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>o(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},m&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>s(e.currentTarget.checked),checked:a}),"common only"),d&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>i(e.currentTarget.checked),checked:r}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(b)||b.length>0?b:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),s=a(241),r=a.n(s),i=(a(242),a(244)),c=a(251);function o(e){return JSON.stringify(e)}function u(e){return e.includes(".")?'"'+e+'"':e}function m(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${u(t.name)} = ${o(t.value)}`:`${u(Object.keys(t)[0])} = ${o(Object.values(t)[0])}`:e?`${e} = ${o(t)}`:`${o(t)}`;var a}function d({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},o(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},o(n))),t.push(" ");return t}function b({name:e,path:t,value:a}){return l.a.createElement("code",null,m(null,a))}function p({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=m(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(i.a,{fileName:"vector.toml"}),l.a.createElement(c.a,{className:"language-toml"},n))}function h({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,o(a)))}function f({defaultValue:e,enumValues:t,examples:a,name:s,path:r,relevantWhen:i}){const[c,o]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(b,{name:s,path:r,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(d,{values:t})):null,i?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(h,{value:i})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>o(!c)},c?"Hide examples":"View examples"),c&&l.a.createElement("div",{className:"examples"},l.a.createElement(p,{name:s,path:r,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:s,examples:i,name:c,path:o,relevantWhen:u,templateable:m,type:d,unit:b,required:p}){const[h,y]=Object(n.useState)(!1);let v=e;return h&&(v=v.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:r()("field","section",p?"field-required":"",h?"field-collapsed":""),required:p},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),m&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},d),s&&Object.keys(s).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),b&&l.a.createElement("span",{className:"badge badge--secondary"},b),p?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),v,!h&&l.a.createElement(f,{defaultValue:a,enumValues:s,examples:i,name:c,path:o,relevantWhen:u}))}},247:function(e,t,a){"use strict";var n=a(1),l=a(0),s=a.n(l),r=a(252),i=a(241),c=a.n(i),o=a(253),u=a.n(o);function m({block:e,centered:t,className:a,style:n,values:l,selectedValue:r,setSelectedValue:i}){return s.a.createElement("div",{className:t?"tabs--centered":""},s.a.createElement("ul",{className:c()("tabs",a,{"tabs--block":e}),style:n},l.map(({value:e,label:t})=>s.a.createElement("li",{className:c()("tab-item",{"tab-item--active":r===e}),key:e,onClick:()=>i(e)},t))))}function d({selectedValue:e,setSelectedValue:t,values:a}){return s.a.createElement(r.a,{className:"react-select-container",classNamePrefix:"react-select",options:a,isClearable:!1,placeholder:"Select a version...",value:a.find(t=>t.value==e),onChange:e=>t(e?e.value:null)})}t.a=function(e){const{block:t,centered:a,children:r,defaultValue:i,select:c,style:o,values:b,urlKey:p}=e,[h,f]=Object(l.useState)(i);return Object(l.useEffect)(()=>{if("undefined"!=typeof window&&window.location&&p){let e=u.a.parse(window.location.search);e[p]&&f(e[p])}},[]),s.a.createElement("div",null,b.length>1&&(c?s.a.createElement(d,Object(n.a)({selectedValue:h,setSelectedValue:f},e)):s.a.createElement(m,Object(n.a)({selectedValue:h,setSelectedValue:f},e))),s.a.createElement("div",{className:"margin-vert--md"},l.Children.toArray(r).filter(e=>e.props.value===h)[0]))}},248:function(e,t,a){"use strict";var n=a(0),l=a.n(n);t.a=function(e){return l.a.createElement("div",null,e.children)}}}]);