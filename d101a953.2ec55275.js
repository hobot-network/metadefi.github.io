(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{218:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return u})),a.d(t,"rightToc",(function(){return m})),a.d(t,"default",(function(){return b}));var n=a(1),l=a(6),r=(a(0),a(242)),o=a(244),c=a(245),s=a(246),i={description:"The Vector `concat` transform accepts `log` events and allows you to concat (substrings) of other fields to a new one.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+concat%22",sidebar_label:'concat|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/concat.rs",status:"beta",title:"Concat Transform"},u={id:"reference/transforms/concat",title:"Concat Transform",description:"The Vector `concat` transform accepts `log` events and allows you to concat (substrings) of other fields to a new one.",source:"@site/docs/reference/transforms/concat.md",permalink:"/docs/reference/transforms/concat",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/transforms/concat.md",sidebar_label:'concat|["log"]',sidebar:"docs",previous:{title:"Coercer Transform",permalink:"/docs/reference/transforms/coercer"},next:{title:"Field Filter Transform",permalink:"/docs/reference/transforms/field_filter"}},m=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"items",id:"items",children:[]},{value:"joiner",id:"joiner",children:[]},{value:"target",id:"target",children:[]}]},{value:"Output",id:"output",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Environment Variables",id:"environment-variables",children:[]}]}],d={rightToc:m},p="wrapper";function b(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)(p,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Vector ",Object(r.b)("inlineCode",{parentName:"p"},"concat")," transform accepts ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to concat (substrings) of other fields to a new one."),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)(o.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED\n  type = "concat" # must be: "concat"\n  inputs = ["my-source-id"] # example\n  items = ["fist[..3]", "second[-5..]", "third[3..6]"] # example\n  target = "dest_field_name" # example\n\n  # OPTIONAL\n  joiner = " " # default\n')),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)(c.a,{filters:!0,mdxType:"Fields"},Object(r.b)(s.a,{common:!0,defaultValue:null,enumValues:null,examples:[["fist[..3]","second[-5..]","third[3..6]"]],name:"items",path:null,relevantWhen:null,required:!0,templateable:!1,type:"[string]",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"items"},"items"),Object(r.b)("p",null,"A list of substring definitons in the format of source_field","[start..end]",". For both start and end negative values are counted from the end of the string.")),Object(r.b)(s.a,{common:!0,defaultValue:" ",enumValues:null,examples:[" ",",","_","+"],name:"joiner",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"joiner"},"joiner"),Object(r.b)("p",null,"The string that is used to join all items.")),Object(r.b)(s.a,{common:!0,defaultValue:null,enumValues:null,examples:["dest_field_name"],name:"target",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"target"},"target"),Object(r.b)("p",null,"The name for the new label."))),Object(r.b)("h2",{id:"output"},"Output"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"concat")," transform accepts ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to concat (substrings) of other fields to a new one.\nFor example:"),Object(r.b)("p",null,"Given the following input log event:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "message": "Hello world",\n  "month": "12",\n  "day": "25",\n  "year": "2020"\n}\n')),Object(r.b)("p",null,"And the following example configuration:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.concat_date]\n  type = "concat"\n  items = ["month", "day", "year"]\n  target = "date"\n  joiner = "/"\n')),Object(r.b)("p",null,"A log event will be output with the following structure:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "message": "Hello world",\n  "date": "12/25/2020", // <-- new field\n  "month": "12",\n  "day": "25",\n  "year": "2020"\n}\n')),Object(r.b)("h2",{id:"how-it-works"},"How It Works"),Object(r.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(r.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(r.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(r.b)("p",null,"You can learn more in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."))}b.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,r]=Object(n.useState)(!1),[o,c]=Object(n.useState)(!1),[s,i]=Object(n.useState)(null);let u=Array.isArray(e)?e:[e],m=u.some(e=>e.props.common),d=u.some(e=>e.props.required),p=u;return a&&(p=p.filter(e=>e.props.common)),o&&(p=p.filter(e=>e.props.required)),s&&(p=p.filter(e=>e.props.name.toLowerCase().includes(s.toLowerCase()))),l.a.createElement("div",{className:"fields"},u.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},p.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>i(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},m&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>r(e.currentTarget.checked),checked:a}),"common only"),d&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>c(e.currentTarget.checked),checked:o}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(p)||p.length>0?p:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),r=a(241),o=a.n(r),c=(a(242),a(244)),s=a(251);function i(e){return JSON.stringify(e)}function u(e){return e.includes(".")?'"'+e+'"':e}function m(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${u(t.name)} = ${i(t.value)}`:`${u(Object.keys(t)[0])} = ${i(Object.values(t)[0])}`:e?`${e} = ${i(t)}`:`${i(t)}`;var a}function d({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},i(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},i(n))),t.push(" ");return t}function p({name:e,path:t,value:a}){return l.a.createElement("code",null,m(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=m(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(c.a,{fileName:"vector.toml"}),l.a.createElement(s.a,{className:"language-toml"},n))}function f({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,i(a)))}function h({defaultValue:e,enumValues:t,examples:a,name:r,path:o,relevantWhen:c}){const[s,i]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(p,{name:r,path:o,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(d,{values:t})):null,c?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(f,{value:c})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>i(!s)},s?"Hide examples":"View examples"),s&&l.a.createElement("div",{className:"examples"},l.a.createElement(b,{name:r,path:o,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:c,name:s,path:i,relevantWhen:u,templateable:m,type:d,unit:p,required:b}){const[f,g]=Object(n.useState)(!1);let v=e;return f&&(v=v.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:o()("field","section",b?"field-required":"",f?"field-collapsed":""),required:b},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),m&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},d),r&&Object.keys(r).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),p&&l.a.createElement("span",{className:"badge badge--secondary"},p),b?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),v,!f&&l.a.createElement(h,{defaultValue:a,enumValues:r,examples:c,name:s,path:i,relevantWhen:u}))}}}]);