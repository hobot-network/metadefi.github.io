(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{222:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return u})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return p}));var n=a(1),l=a(6),r=(a(0),a(242)),c=a(244),i=a(245),o=a(246),s={delivery_guarantee:"best_effort",description:"The Vector `docker` source ingests data through the docker engine daemon and outputs `log` events.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22source%3A+docker%22",operating_systems:["linux","macos","windows"],sidebar_label:'docker|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/sources/docker.rs",status:"beta",title:"Docker Source",unsupported_operating_systems:[]},u={id:"reference/sources/docker",title:"Docker Source",description:"The Vector `docker` source ingests data through the docker engine daemon and outputs `log` events.",source:"@site/docs/reference/sources/docker.md",permalink:"/docs/reference/sources/docker",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/sources/docker.md",sidebar_label:'docker|["log"]',sidebar:"docs",previous:{title:"Sources",permalink:"/docs/reference/sources"},next:{title:"File Source",permalink:"/docs/reference/sources/file"}},d=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"include_containers",id:"include_containers",children:[]},{value:"include_images",id:"include_images",children:[]},{value:"include_labels",id:"include_labels",children:[]}]},{value:"Env Vars",id:"env-vars",children:[{value:"DOCKER_HOST",id:"docker_host",children:[]},{value:"DOCKER_VERIFY_TLS",id:"docker_verify_tls",children:[]}]},{value:"Output",id:"output",children:[{value:"<code>[label-key]</code>",id:"label-key",children:[]},{value:"container_created_at",id:"container_created_at",children:[]},{value:"container_id",id:"container_id",children:[]},{value:"container_name",id:"container_name",children:[]},{value:"image",id:"image",children:[]},{value:"message",id:"message",children:[]},{value:"stream",id:"stream",children:[]},{value:"timestamp",id:"timestamp",children:[]}]},{value:"How It Works",id:"how-it-works",children:[{value:"Connecting to the Docker daemon",id:"connecting-to-the-docker-daemon",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]}]}],m={rightToc:d},b="wrapper";function p(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)(b,Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Vector ",Object(r.b)("inlineCode",{parentName:"p"},"docker")," source ingests data through the docker engine daemon and outputs ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events."),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)(c.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[sources.my_source_id]\n  # REQUIRED\n  type = "docker" # must be: "docker"\n\n  # OPTIONAL\n  include_containers = ["my_container_name", "container_prefix", "9b6247364a03"] # example, no default\n  include_images = ["my_image_name", "httpd", "redis"] # example, no default\n  include_labels = ["label_key1=label_value1", "label_key2=label_value2"] # example, no default\n')),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)(i.a,{filters:!0,mdxType:"Fields"},Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[["my_container_name","container_prefix","9b6247364a03"]],name:"include_containers",path:null,relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"include_containers"},"include_containers"),Object(r.b)("p",null,"A list of container IDs ",Object(r.b)("em",{parentName:"p"},"or")," names to match against. Prefix matches are supported, meaning you can supply just the first few characters of the\ncontainer ID or name. If not provided, all containers will be included.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[["my_image_name","httpd","redis"]],name:"include_images",path:null,relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"include_images"},"include_images"),Object(r.b)("p",null,"A list of image names to match against. If not provided, all images will be included.")),Object(r.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[["label_key1=label_value1","label_key2=label_value2"]],name:"include_labels",path:null,relevantWhen:null,required:!1,templateable:!1,type:"[string]",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"include_labels"},"include_labels"),Object(r.b)("p",null,"A list of container object labels to match against when filtering running containers. This should follow the described label's synatx in ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.docker.com/config/labels-custom-metadata/"}),"docker object labels docs"),"."))),Object(r.b)("h2",{id:"env-vars"},"Env Vars"),Object(r.b)(i.a,{filters:!0,mdxType:"Fields"},Object(r.b)(o.a,{common:!0,defaultValue:"unix:///var/run/docker.sock",enumValues:null,examples:["unix://path/to/socket","tcp://host:2375/path"],name:"DOCKER_HOST",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"docker_host"},"DOCKER_HOST"),Object(r.b)("p",null,"The docker host to connect to. See ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#connecting-to-the-docker-daemon"}),"Connecting to the Docker daemon")," for more info.")),Object(r.b)(o.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],name:"DOCKER_VERIFY_TLS",path:null,relevantWhen:null,required:!0,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"docker_verify_tls"},"DOCKER_VERIFY_TLS"),Object(r.b)("p",null,"If ",Object(r.b)("inlineCode",{parentName:"p"},"true")," (the default), Vector will validate the TLS certificate of the remote host. Do NOT set this to ",Object(r.b)("inlineCode",{parentName:"p"},"false")," unless you understand the risks of not verifying the remote certificate. See ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#connecting-to-the-docker-daemon"}),"Connecting to the Docker daemon")," for more info."))),Object(r.b)("h2",{id:"output"},"Output"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"docker")," source ingests data through the docker engine daemon and outputs ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events.\nFor example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "com.example.vendor": "Timber Inc.",\n  "container_created_at": "2019-11-01T21:15:47+00:00",\n  "container_id": "9b6247364a03",\n  "container_name": "evil_ptolemy",\n  "image": "ubuntu:latest",\n  "message": "Started GET / for 127.0.0.1 at 2012-03-10 14:28:14 +0100",\n  "stream": "stdout",\n  "timestamp": "2019-11-01T21:15:47+00:00"\n}\n')),Object(r.b)("p",null,"More detail on the output schema is below."),Object(r.b)(i.a,{filters:!0,mdxType:"Fields"},Object(r.b)(o.a,{defaultValue:null,enumValues:null,examples:[{"com.example.vendor":"Timber Inc."},{"com.example.name":"Vector"},{"com.example.build-date":"2029-04-12T23:20:50.52Z"}],name:"`[label-key]`",path:null,required:!0,type:"string",mdxType:"Field"},Object(r.b)("h3",{id:"label-key"},Object(r.b)("inlineCode",{parentName:"h3"},"[label-key]")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.docker.com/config/labels-custom-metadata/"}),"Docker object labels"),". Each label is inserted with it's exact key/value pair.")),Object(r.b)(o.a,{defaultValue:null,enumValues:null,examples:["2019-11-01T21:15:47+00:00"],name:"container_created_at",path:null,required:!0,type:"timestamp",mdxType:"Field"},Object(r.b)("h3",{id:"container_created_at"},"container_created_at"),Object(r.b)("p",null,"A UTC timestamp representing when the container was created.")),Object(r.b)(o.a,{defaultValue:null,enumValues:null,examples:["9b6247364a03","715ebfcee040"],name:"container_id",path:null,required:!0,type:"string",mdxType:"Field"},Object(r.b)("h3",{id:"container_id"},"container_id"),Object(r.b)("p",null,"The Docker container ID that the log was collected from.")),Object(r.b)(o.a,{defaultValue:null,enumValues:null,examples:["evil_ptolemy","nostalgic_stallman"],name:"container_name",path:null,required:!0,type:"string",mdxType:"Field"},Object(r.b)("h3",{id:"container_name"},"container_name"),Object(r.b)("p",null,"The Docker container name that the log was collected from.")),Object(r.b)(o.a,{defaultValue:null,enumValues:null,examples:["ubuntu:latest","busybox","timberio/vector:latest-alpine"],name:"image",path:null,required:!0,type:"string",mdxType:"Field"},Object(r.b)("h3",{id:"image"},"image"),Object(r.b)("p",null,"The image name that the container is based on.")),Object(r.b)(o.a,{defaultValue:null,enumValues:null,examples:["Started GET / for 127.0.0.1 at 2012-03-10 14:28:14 +0100"],name:"message",path:null,required:!0,type:"string",mdxType:"Field"},Object(r.b)("h3",{id:"message"},"message"),Object(r.b)("p",null,"The raw log message, unaltered.")),Object(r.b)(o.a,{defaultValue:null,enumValues:["stdout","stderr"],examples:["stdout","stderr"],name:"stream",path:null,required:!0,type:"string",mdxType:"Field"},Object(r.b)("h3",{id:"stream"},"stream"),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Standard_streams"}),"standard stream")," that the log was collected from.")),Object(r.b)(o.a,{defaultValue:null,enumValues:null,examples:["2019-11-01T21:15:47+00:00"],name:"timestamp",path:null,required:!0,type:"timestamp",mdxType:"Field"},Object(r.b)("h3",{id:"timestamp"},"timestamp"),Object(r.b)("p",null,"The UTC timestamp extracted from the Docker log event."))),Object(r.b)("h2",{id:"how-it-works"},"How It Works"),Object(r.b)("h3",{id:"connecting-to-the-docker-daemon"},"Connecting to the Docker daemon"),Object(r.b)("p",null,"Vector will automatically attempt to connect to the docker daemon for you. In most\nsituations if your current user is able to run ",Object(r.b)("inlineCode",{parentName:"p"},"docker ps")," then Vector will be able to\nconnect. Vector will also respect if ",Object(r.b)("inlineCode",{parentName:"p"},"DOCKER_HOST")," and ",Object(r.b)("inlineCode",{parentName:"p"},"DOCKER_VERIFY_TLS")," are set. Vector will also\nuse the other default docker environment variables if they are set. See the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option"}),"Docker daemon docs"),"."),Object(r.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(r.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(r.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(r.b)("p",null,"You can learn more in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."))}p.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,r]=Object(n.useState)(!1),[c,i]=Object(n.useState)(!1),[o,s]=Object(n.useState)(null);let u=Array.isArray(e)?e:[e],d=u.some(e=>e.props.common),m=u.some(e=>e.props.required),b=u;return a&&(b=b.filter(e=>e.props.common)),c&&(b=b.filter(e=>e.props.required)),o&&(b=b.filter(e=>e.props.name.toLowerCase().includes(o.toLowerCase()))),l.a.createElement("div",{className:"fields"},u.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},b.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>s(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},d&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>r(e.currentTarget.checked),checked:a}),"common only"),m&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>i(e.currentTarget.checked),checked:c}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(b)||b.length>0?b:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),r=a(241),c=a.n(r),i=(a(242),a(244)),o=a(251);function s(e){return JSON.stringify(e)}function u(e){return e.includes(".")?'"'+e+'"':e}function d(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${u(t.name)} = ${s(t.value)}`:`${u(Object.keys(t)[0])} = ${s(Object.values(t)[0])}`:e?`${e} = ${s(t)}`:`${s(t)}`;var a}function m({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},s(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},s(n))),t.push(" ");return t}function b({name:e,path:t,value:a}){return l.a.createElement("code",null,d(null,a))}function p({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=d(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(i.a,{fileName:"vector.toml"}),l.a.createElement(o.a,{className:"language-toml"},n))}function h({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,s(a)))}function f({defaultValue:e,enumValues:t,examples:a,name:r,path:c,relevantWhen:i}){const[o,s]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(b,{name:r,path:c,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(m,{values:t})):null,i?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(h,{value:i})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>s(!o)},o?"Hide examples":"View examples"),o&&l.a.createElement("div",{className:"examples"},l.a.createElement(p,{name:r,path:c,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:i,name:o,path:s,relevantWhen:u,templateable:d,type:m,unit:b,required:p}){const[h,g]=Object(n.useState)(!1);let O=e;return h&&(O=O.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:c()("field","section",p?"field-required":"",h?"field-collapsed":""),required:p},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),d&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},m),r&&Object.keys(r).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),b&&l.a.createElement("span",{className:"badge badge--secondary"},b),p?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),O,!h&&l.a.createElement(f,{defaultValue:a,enumValues:r,examples:i,name:o,path:s,relevantWhen:u}))}}}]);