(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{141:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return u})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return m})),a.d(t,"default",(function(){return h}));var n=a(1),l=a(6),r=(a(0),a(242)),i=a(247),s=a(248),o=a(244),c=a(245),d=a(246),u={description:"The Vector `json_parser` transform accepts `log` events and allows you to parse a log field value as JSON.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+json_parser%22",sidebar_label:'json_parser|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/json_parser.rs",status:"prod-ready",title:"JSON Parser Transform"},p={id:"reference/transforms/json_parser",title:"JSON Parser Transform",description:"The Vector `json_parser` transform accepts `log` events and allows you to parse a log field value as JSON.",source:"@site/docs/reference/transforms/json_parser.md",permalink:"/docs/reference/transforms/json_parser",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/transforms/json_parser.md",sidebar_label:'json_parser|["log"]',sidebar:"docs",previous:{title:"Grok Parser Transform",permalink:"/docs/reference/transforms/grok_parser"},next:{title:"Log to Metric Transform",permalink:"/docs/reference/transforms/log_to_metric"}},m=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"drop_field",id:"drop_field",children:[]},{value:"drop_invalid",id:"drop_invalid",children:[]},{value:"field",id:"field",children:[]},{value:"overwrite_target",id:"overwrite_target",children:[]},{value:"target_field",id:"target_field",children:[]}]},{value:"Output",id:"output",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Chaining / Unwrapping",id:"chaining--unwrapping",children:[]},{value:"Correctness",id:"correctness",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Invalid JSON",id:"invalid-json",children:[]},{value:"Key Conflicts",id:"key-conflicts",children:[]},{value:"Nested Fields",id:"nested-fields",children:[]}]}],b={rightToc:m},f="wrapper";function h(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)(f,Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Vector ",Object(r.b)("inlineCode",{parentName:"p"},"json_parser")," transform accepts ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to parse a log field value as JSON."),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)(i.a,{block:!0,defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(r.b)(s.a,{value:"common",mdxType:"TabItem"},Object(r.b)(o.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED\n  type = "json_parser" # must be: "json_parser"\n  inputs = ["my-source-id"] # example\n  drop_invalid = true # example\n\n  # OPTIONAL\n  drop_field = true # default\n  field = "message" # default\n'))),Object(r.b)(s.a,{value:"advanced",mdxType:"TabItem"},Object(r.b)(o.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED\n  type = "json_parser" # must be: "json_parser"\n  inputs = ["my-source-id"] # example\n  drop_invalid = true # example\n\n  # OPTIONAL\n  drop_field = true # default\n  field = "message" # default\n  overwrite_target = false # default\n  target_field = "target" # example, no default\n')))),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)(c.a,{filters:!0,mdxType:"Fields"},Object(r.b)(d.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],name:"drop_field",path:null,relevantWhen:null,required:!0,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"drop_field"},"drop_field"),Object(r.b)("p",null,"If the specified ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#field"}),Object(r.b)("inlineCode",{parentName:"a"},"field"))," should be dropped (removed) after parsing.")),Object(r.b)(d.a,{common:!0,defaultValue:null,enumValues:null,examples:[!0],name:"drop_invalid",path:null,relevantWhen:null,required:!0,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"drop_invalid"},"drop_invalid"),Object(r.b)("p",null,"If ",Object(r.b)("inlineCode",{parentName:"p"},"true")," events with invalid JSON will be dropped, otherwise the event will be kept and passed through. See ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#invalid-json"}),"Invalid JSON")," for more info.")),Object(r.b)(d.a,{common:!0,defaultValue:"message",enumValues:null,examples:["message"],name:"field",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"field"},"field"),Object(r.b)("p",null,"The log field to decode as JSON. Must be a ",Object(r.b)("inlineCode",{parentName:"p"},"string")," value type. See ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#invalid-json"}),"Invalid JSON")," for more info.")),Object(r.b)(d.a,{common:!1,defaultValue:!1,enumValues:null,examples:[!1,!0],name:"overwrite_target",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"overwrite_target"},"overwrite_target"),Object(r.b)("p",null,"If ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#target_field"}),Object(r.b)("inlineCode",{parentName:"a"},"target_field"))," is set and the log contains a field of the same name as the target, it will only be overwritten if this is set to ",Object(r.b)("inlineCode",{parentName:"p"},"true"),".")),Object(r.b)(d.a,{common:!1,defaultValue:null,enumValues:null,examples:["target"],name:"target_field",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"target_field"},"target_field"),Object(r.b)("p",null,"If this setting is present, the parsed JSON will be inserted into the log as a sub-object with this name. If a field with the same name already exists, the parser will fail and produce an error."))),Object(r.b)("h2",{id:"output"},"Output"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"json_parser")," transform accepts ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to parse a log field value as JSON.\nFor example:"),Object(r.b)(i.a,{block:!0,defaultValue:"simple",values:[{label:"Simple",value:"simple"},{label:"Wrapped",value:"wrapped"}],mdxType:"Tabs"},Object(r.b)(s.a,{value:"simple",mdxType:"TabItem"},Object(r.b)("p",null,"Given the following log event:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n  "message": "{"key": "value"}"\n}\n')),Object(r.b)("p",null,"You can parse the JSON with:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.json]\n  inputs = ["<source_id>"]\n  type   = "json_parser"\n  field  = "message"\n')),Object(r.b)("p",null,"This would produce the following event as output:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "key": "value"\n}\n')),Object(r.b)("p",null,"By default, Vector drops fields after parsing them via the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#drop_field"}),Object(r.b)("inlineCode",{parentName:"a"},"drop_field")),"\noption.")),Object(r.b)(s.a,{value:"wrapped",mdxType:"TabItem"},Object(r.b)("p",null,"It is possible to chain ",Object(r.b)("inlineCode",{parentName:"p"},"json_parser"),' transforms to effectively "unwrap"\nnested JSON documents. For example, give this log event:'),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n  "message": "{"parent": "{"child": "value2"}"}"\n}\n')),Object(r.b)("p",null,"You could unwrap the JSON with the following transforms:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.root_json]\n  inputs = ["<source_id>"]\n  type   = "json_parser"\n  field  = "message"\n\n[transforms.parent_json]\n  inputs = ["root_json"]\n  type   = "json_parser"\n  field  = "parent"\n\n[transforms.child_json]\n  inputs = ["parent_json"]\n  type   = "json_parser"\n  field  = "child"\n')),Object(r.b)("p",null,"This would produce the following event as output:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "child": "value2"\n}\n')),Object(r.b)("p",null,"By default, Vector drops fields after parsing them via the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#drop_field"}),Object(r.b)("inlineCode",{parentName:"a"},"drop_field")),"\noption."))),Object(r.b)("h2",{id:"how-it-works"},"How It Works"),Object(r.b)("h3",{id:"chaining--unwrapping"},"Chaining / Unwrapping"),Object(r.b)("p",null,"Please see the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#i-o"}),"I/O section")," for an example of chaining and unwrapping JSON."),Object(r.b)("h3",{id:"correctness"},"Correctness"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"json_parser")," source has been involved in the following correctness tests:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/timberio/vector-test-harness/tree/master/cases/wrapped_json_correctness"}),Object(r.b)("inlineCode",{parentName:"a"},"wrapped_json_correctness")))),Object(r.b)("p",null,"Learn more in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/#correctness"}),"Correctness")," sections."),Object(r.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(r.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(r.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(r.b)("p",null,"You can learn more in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."),Object(r.b)("h3",{id:"invalid-json"},"Invalid JSON"),Object(r.b)("p",null,"If the value for the specified ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#field"}),Object(r.b)("inlineCode",{parentName:"a"},"field"))," is not valid JSON you can control keep or discard the event with the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#drop_invalid"}),Object(r.b)("inlineCode",{parentName:"a"},"drop_invalid"))," option. Setting it to ",Object(r.b)("inlineCode",{parentName:"p"},"true")," will discard the event and drop it entirely. Setting it to ",Object(r.b)("inlineCode",{parentName:"p"},"false")," will keep the event and pass it through. Note that passing through the event could cause problems and violate assumptions about the structure of your event."),Object(r.b)("h3",{id:"key-conflicts"},"Key Conflicts"),Object(r.b)("p",null,"Any key present in the decoded JSON will override existin keys in the event."),Object(r.b)("h3",{id:"nested-fields"},"Nested Fields"),Object(r.b)("p",null,"If the decoded JSON includes nested fields it will be ",Object(r.b)("em",{parentName:"p"},"deep")," merged into the event. For example, given the following event:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "message": "{"parent": {"child2": "value2"}}",\n  "parent": {\n    "child1": "value1"\n  }\n}\n')),Object(r.b)("p",null,"Parsing the ",Object(r.b)("inlineCode",{parentName:"p"},'"message"')," field would result the following structure:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "parent": {\n    "child1": "value1",\n    "child2": "value2"\n  }\n}\n')))}h.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,r]=Object(n.useState)(!1),[i,s]=Object(n.useState)(!1),[o,c]=Object(n.useState)(null);let d=Array.isArray(e)?e:[e],u=d.some(e=>e.props.common),p=d.some(e=>e.props.required),m=d;return a&&(m=m.filter(e=>e.props.common)),i&&(m=m.filter(e=>e.props.required)),o&&(m=m.filter(e=>e.props.name.toLowerCase().includes(o.toLowerCase()))),l.a.createElement("div",{className:"fields"},d.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},m.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>c(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},u&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>r(e.currentTarget.checked),checked:a}),"common only"),p&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>s(e.currentTarget.checked),checked:i}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(m)||m.length>0?m:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),r=a(241),i=a.n(r),s=(a(242),a(244)),o=a(251);function c(e){return JSON.stringify(e)}function d(e){return e.includes(".")?'"'+e+'"':e}function u(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${d(t.name)} = ${c(t.value)}`:`${d(Object.keys(t)[0])} = ${c(Object.values(t)[0])}`:e?`${e} = ${c(t)}`:`${c(t)}`;var a}function p({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},c(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},c(n))),t.push(" ");return t}function m({name:e,path:t,value:a}){return l.a.createElement("code",null,u(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=u(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(s.a,{fileName:"vector.toml"}),l.a.createElement(o.a,{className:"language-toml"},n))}function f({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,c(a)))}function h({defaultValue:e,enumValues:t,examples:a,name:r,path:i,relevantWhen:s}){const[o,c]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(m,{name:r,path:i,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(p,{values:t})):null,s?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(f,{value:s})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>c(!o)},o?"Hide examples":"View examples"),o&&l.a.createElement("div",{className:"examples"},l.a.createElement(b,{name:r,path:i,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:s,name:o,path:c,relevantWhen:d,templateable:u,type:p,unit:m,required:b}){const[f,j]=Object(n.useState)(!1);let v=e;return f&&(v=v.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:i()("field","section",b?"field-required":"",f?"field-collapsed":""),required:b},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),u&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},p),r&&Object.keys(r).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),m&&l.a.createElement("span",{className:"badge badge--secondary"},m),b?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),v,!f&&l.a.createElement(h,{defaultValue:a,enumValues:r,examples:s,name:o,path:c,relevantWhen:d}))}},247:function(e,t,a){"use strict";var n=a(1),l=a(0),r=a.n(l),i=a(252),s=a(241),o=a.n(s),c=a(253),d=a.n(c);function u({block:e,centered:t,className:a,style:n,values:l,selectedValue:i,setSelectedValue:s}){return r.a.createElement("div",{className:t?"tabs--centered":""},r.a.createElement("ul",{className:o()("tabs",a,{"tabs--block":e}),style:n},l.map(({value:e,label:t})=>r.a.createElement("li",{className:o()("tab-item",{"tab-item--active":i===e}),key:e,onClick:()=>s(e)},t))))}function p({selectedValue:e,setSelectedValue:t,values:a}){return r.a.createElement(i.a,{className:"react-select-container",classNamePrefix:"react-select",options:a,isClearable:!1,placeholder:"Select a version...",value:a.find(t=>t.value==e),onChange:e=>t(e?e.value:null)})}t.a=function(e){const{block:t,centered:a,children:i,defaultValue:s,select:o,style:c,values:m,urlKey:b}=e,[f,h]=Object(l.useState)(s);return Object(l.useEffect)(()=>{if("undefined"!=typeof window&&window.location&&b){let e=d.a.parse(window.location.search);e[b]&&h(e[b])}},[]),r.a.createElement("div",null,m.length>1&&(o?r.a.createElement(p,Object(n.a)({selectedValue:f,setSelectedValue:h},e)):r.a.createElement(u,Object(n.a)({selectedValue:f,setSelectedValue:h},e))),r.a.createElement("div",{className:"margin-vert--md"},l.Children.toArray(i).filter(e=>e.props.value===f)[0]))}},248:function(e,t,a){"use strict";var n=a(0),l=a.n(n);t.a=function(e){return l.a.createElement("div",null,e.children)}}}]);