(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{113:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return m})),a.d(t,"default",(function(){return O}));var n=a(1),l=a(6),r=(a(0),a(242)),c=a(247),i=a(248),o=a(245),s=a(246),b={title:"Process Management",description:"How to manage the Vector process, such as starting, stopping, and reloading."},d={id:"administration/process-management",title:"Process Management",description:"How to manage the Vector process, such as starting, stopping, and reloading.",source:"@site/docs/administration/process-management.md",permalink:"/docs/administration/process-management",editUrl:"https://github.com/brainrexapi/edit/master/docs/administration/process-management.md",sidebar:"docs",previous:{title:"Administration",permalink:"/docs/administration"},next:{title:"Monitoring",permalink:"/docs/administration/monitoring"}},m=[{value:"Starting",id:"starting",children:[{value:"Flags",id:"flags",children:[]},{value:"Daemonizing",id:"daemonizing",children:[]}]},{value:"Stopping",id:"stopping",children:[{value:"Graceful Shutdown",id:"graceful-shutdown",children:[]},{value:"Force Killing",id:"force-killing",children:[]},{value:"Exit Codes",id:"exit-codes",children:[]}]},{value:"Reloading",id:"reloading",children:[{value:"Configuration Errors",id:"configuration-errors",children:[]},{value:"Graceful Pipeline Transitioning",id:"graceful-pipeline-transitioning",children:[]}]}],u={rightToc:m},p="wrapper";function O(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)(p,Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This document covers how to manage the Vector process using various process\nmanagers."),Object(r.b)("h2",{id:"starting"},"Starting"),Object(r.b)("p",null,"Vector can be started by calling the ",Object(r.b)("inlineCode",{parentName:"p"},"vector")," binary directly, no subcommand is\nnecessary."),Object(r.b)(c.a,{block:!0,defaultValue:"manual",values:[{label:"Manual",value:"manual"},{label:"Sytemd",value:"systemd"},{label:"Initd",value:"initd"},{label:"Homebrew",value:"homebrew"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"manual",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector --config /etc/vector/vector.toml\n"))),Object(r.b)(i.a,{value:"systemd",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl start vector\n"))),Object(r.b)(i.a,{value:"initd",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"/etc/init.d/vector start\n"))),Object(r.b)(i.a,{value:"homebrew",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"brew services start vector\n")))),Object(r.b)("h3",{id:"flags"},"Flags"),Object(r.b)(o.a,{mdxType:"Fields"},Object(r.b)(s.a,{common:!0,defaultValue:"/etc/vector/vector.toml",name:"-c, --config",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"-c---config"},"-c, --config"),Object(r.b)("p",null,"Path to the Vector ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/"}),"configuration file"),".")),Object(r.b)(s.a,{common:!0,defaultValue:"/etc/vector/vector.toml",name:"-c, --config",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"test"},"test"),Object(r.b)("p",null,"test"))),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Flag"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("strong",{parentName:"td"},"Required")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-c, --config <path>")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Path the Vector ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/setup/configuration/"}),"configuration file"),".")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("strong",{parentName:"td"},"Optional")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-d, --dry-run")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Vector will ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/administration/validating/"}),"validate configuration")," and exit.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-q, --quiet")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Raises the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"warn"),".")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-qq")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Raises the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"error"),", the highest level possible.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-r, --require-healthy")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Causes vector to immediately exit if any sinks fail their healthchecks.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-t, --threads")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Limits the number of internal threads Vector can spawn. See the ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/setup/deployment/roles/agent/#limiting-resources"}),"Limiting Resources")," in the ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/setup/deployment/roles/agent/"}),"Agent role")," documentation.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-v, --verbose")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Drops the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"debug"),".")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"-vv")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Drops the log level to ",Object(r.b)("inlineCode",{parentName:"td"},"trace"),", the lowest level possible.")))),Object(r.b)("h3",{id:"daemonizing"},"Daemonizing"),Object(r.b)("p",null,"Vector does not ",Object(r.b)("em",{parentName:"p"},"directly")," offer a way to daemonize the Vector process. We\nhighly recommend that you use a utility like ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.freedesktop.org/wiki/Software/systemd/"}),"Systemd")," to\ndaemonize and manage your processes. Vector provides a\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/timberio/vector/blob/master/distribution/systemd/vector.service"}),Object(r.b)("inlineCode",{parentName:"a"},"vector.service")," file")," for Systemd."),Object(r.b)("h2",{id:"stopping"},"Stopping"),Object(r.b)("p",null,"The Vector process should be stopped by sending it a ",Object(r.b)("inlineCode",{parentName:"p"},"SIGTERM")," process signal:"),Object(r.b)(c.a,{block:!0,defaultValue:"manual",values:[{label:"Manual",value:"manual"},{label:"Systemd",value:"systemd"},{label:"Initd",value:"initd"},{label:"Homebrew",value:"homebrew"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"manual",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"kill -SIGTERM <vector-process-id>\n"))),Object(r.b)(i.a,{value:"systemd",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"sudo systemctl stop vector\n"))),Object(r.b)(i.a,{value:"initd",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"/etc/init.d/vector stop\n"))),Object(r.b)(i.a,{value:"homebrew",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"brew services stop vector\n")))),Object(r.b)("p",null,"If you are currently running the Vector process in your terminal, this can be\nachieved by a single ",Object(r.b)("inlineCode",{parentName:"p"},"ctrl+c")," key combination."),Object(r.b)("h3",{id:"graceful-shutdown"},"Graceful Shutdown"),Object(r.b)("p",null,"Vector is designed to gracefully shutdown within 20 seconds when a ",Object(r.b)("inlineCode",{parentName:"p"},"SIGTERM"),"\nprocess signal is received. The shutdown process is as follows:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Stop accepting new data for all ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sources/"}),"sources"),"."),Object(r.b)("li",{parentName:"ol"},"Gracefully close any open connections with a 20 second timeout."),Object(r.b)("li",{parentName:"ol"},"Flush any sink buffers with a 20 second timeout."),Object(r.b)("li",{parentName:"ol"},"Exit the process with a 1 code.")),Object(r.b)("h3",{id:"force-killing"},"Force Killing"),Object(r.b)("p",null,"If Vector is forcefully killed there is potential for losing any in-flight\ndata. To mitigate this we recommend enabling on-disk buffers and avoiding\nforceful shutdowns whenever possible."),Object(r.b)("h3",{id:"exit-codes"},"Exit Codes"),Object(r.b)("p",null,"If Vector fails to start it will exit with one of the preferred exit codes\nas defined by ",Object(r.b)("inlineCode",{parentName:"p"},"sysexits.h"),". A full list of exit codes can be found in the\n",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.rs/exitcode/1.1.2/exitcode/#constants"}),Object(r.b)("inlineCode",{parentName:"a"},"exitcodes")," Rust crate"),". The relevant codes that Vector uses\nare:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Code"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"0")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"No error.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(r.b)("inlineCode",{parentName:"td"},"78")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Bad ",Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/setup/configuration/"}),"configuration"),".")))),Object(r.b)("h2",{id:"reloading"},"Reloading"),Object(r.b)("p",null,"Vector can be reloaded, on the fly, to recognize any configuration changes by\nsending the Vector process a ",Object(r.b)("inlineCode",{parentName:"p"},"SIGHUP")," signal:"),Object(r.b)(c.a,{block:!0,defaultValue:"manual",values:[{label:"Manual",value:"manual"},{label:"Systemd",value:"systemd"},{label:"Initd",value:"initd"},{label:"Homebrew",value:"homebrew"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"manual",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"kill -SIGHUP <vector-process-id>\n")),Object(r.b)("p",null,"You can find the Vector process ID with:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ps -ax vector | grep vector\n"))),Object(r.b)(i.a,{value:"systemd",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"systemctl kill -s HUP --kill-who=main vector.service\n"))),Object(r.b)(i.a,{value:"initd",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"/etc/init.d/vector reload\n"))),Object(r.b)(i.a,{value:"homebrew",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"kill -SIGHUP <vector-process-id>\n")),Object(r.b)("p",null,"You can find the Vector process ID with:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"ps -ax vector | grep vector\n")))),Object(r.b)("h3",{id:"configuration-errors"},"Configuration Errors"),Object(r.b)("p",null,"When Vector is reloaded it proceeds to read the new configuration file from\ndisk. If the file has errors it will be logged to ",Object(r.b)("inlineCode",{parentName:"p"},"STDOUT")," and ignored,\npreserving any previous configuration that was set. If the process exits you\nwill not be able to restart the process since it will proceed to use the\nnew configuration file."),Object(r.b)("h3",{id:"graceful-pipeline-transitioning"},"Graceful Pipeline Transitioning"),Object(r.b)("p",null,"Vector will perform a diff between the new and old configuration, determining\nwhich sinks and sources should be started and shutdown and ensures the\ntransition from the old to new pipeline is graceful."))}O.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,r]=Object(n.useState)(!1),[c,i]=Object(n.useState)(!1),[o,s]=Object(n.useState)(null);let b=Array.isArray(e)?e:[e],d=b.some(e=>e.props.common),m=b.some(e=>e.props.required),u=b;return a&&(u=u.filter(e=>e.props.common)),c&&(u=u.filter(e=>e.props.required)),o&&(u=u.filter(e=>e.props.name.toLowerCase().includes(o.toLowerCase()))),l.a.createElement("div",{className:"fields"},b.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},u.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>s(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},d&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>r(e.currentTarget.checked),checked:a}),"common only"),m&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>i(e.currentTarget.checked),checked:c}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(u)||u.length>0?u:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),r=a(241),c=a.n(r),i=(a(242),a(244)),o=a(251);function s(e){return JSON.stringify(e)}function b(e){return e.includes(".")?'"'+e+'"':e}function d(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${b(t.name)} = ${s(t.value)}`:`${b(Object.keys(t)[0])} = ${s(Object.values(t)[0])}`:e?`${e} = ${s(t)}`:`${s(t)}`;var a}function m({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},s(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},s(n))),t.push(" ");return t}function u({name:e,path:t,value:a}){return l.a.createElement("code",null,d(null,a))}function p({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=d(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(i.a,{fileName:"vector.toml"}),l.a.createElement(o.a,{className:"language-toml"},n))}function O({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,s(a)))}function j({defaultValue:e,enumValues:t,examples:a,name:r,path:c,relevantWhen:i}){const[o,s]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(u,{name:r,path:c,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(m,{values:t})):null,i?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(O,{value:i})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>s(!o)},o?"Hide examples":"View examples"),o&&l.a.createElement("div",{className:"examples"},l.a.createElement(p,{name:r,path:c,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:i,name:o,path:s,relevantWhen:b,templateable:d,type:m,unit:u,required:p}){const[O,g]=Object(n.useState)(!1);let h=e;return O&&(h=h.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:c()("field","section",p?"field-required":"",O?"field-collapsed":""),required:p},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),d&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},m),r&&Object.keys(r).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),u&&l.a.createElement("span",{className:"badge badge--secondary"},u),p?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),h,!O&&l.a.createElement(j,{defaultValue:a,enumValues:r,examples:i,name:o,path:s,relevantWhen:b}))}},247:function(e,t,a){"use strict";var n=a(1),l=a(0),r=a.n(l),c=a(252),i=a(241),o=a.n(i),s=a(253),b=a.n(s);function d({block:e,centered:t,className:a,style:n,values:l,selectedValue:c,setSelectedValue:i}){return r.a.createElement("div",{className:t?"tabs--centered":""},r.a.createElement("ul",{className:o()("tabs",a,{"tabs--block":e}),style:n},l.map(({value:e,label:t})=>r.a.createElement("li",{className:o()("tab-item",{"tab-item--active":c===e}),key:e,onClick:()=>i(e)},t))))}function m({selectedValue:e,setSelectedValue:t,values:a}){return r.a.createElement(c.a,{className:"react-select-container",classNamePrefix:"react-select",options:a,isClearable:!1,placeholder:"Select a version...",value:a.find(t=>t.value==e),onChange:e=>t(e?e.value:null)})}t.a=function(e){const{block:t,centered:a,children:c,defaultValue:i,select:o,style:s,values:u,urlKey:p}=e,[O,j]=Object(l.useState)(i);return Object(l.useEffect)(()=>{if("undefined"!=typeof window&&window.location&&p){let e=b.a.parse(window.location.search);e[p]&&j(e[p])}},[]),r.a.createElement("div",null,u.length>1&&(o?r.a.createElement(m,Object(n.a)({selectedValue:O,setSelectedValue:j},e)):r.a.createElement(d,Object(n.a)({selectedValue:O,setSelectedValue:j},e))),r.a.createElement("div",{className:"margin-vert--md"},l.Children.toArray(c).filter(e=>e.props.value===O)[0]))}},248:function(e,t,a){"use strict";var n=a(0),l=a.n(n);t.a=function(e){return l.a.createElement("div",null,e.children)}}}]);