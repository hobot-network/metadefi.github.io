(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{200:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return u})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return b}));var n=a(1),l=a(6),r=(a(0),a(242)),i=a(244),o=a(245),c=a(246),s={description:"The Vector [`geoip`](#geoip) transform accepts `log` events and allows you to enrich events with geolocation data from the MaxMind GeoIP2 and GeoLite2 city databases.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+geoip%22",sidebar_label:'geoip|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/geoip.rs",status:"prod-ready",title:"GeoIP Transform"},u={id:"reference/transforms/geoip",title:"GeoIP Transform",description:"The Vector [`geoip`](#geoip) transform accepts `log` events and allows you to enrich events with geolocation data from the MaxMind GeoIP2 and GeoLite2 city databases.",source:"@site/docs/reference/transforms/geoip.md",permalink:"/docs/reference/transforms/geoip",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/transforms/geoip.md",sidebar_label:'geoip|["log"]',sidebar:"docs",previous:{title:"Field Filter Transform",permalink:"/docs/reference/transforms/field_filter"},next:{title:"Grok Parser Transform",permalink:"/docs/reference/transforms/grok_parser"}},d=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"database",id:"database",children:[]},{value:"source",id:"source",children:[]},{value:"target",id:"target",children:[]}]},{value:"Output",id:"output",children:[{value:"geoip",id:"geoip",children:[]}]},{value:"How It Works",id:"how-it-works",children:[{value:"Environment Variables",id:"environment-variables",children:[]}]}],m={rightToc:d},p="wrapper";function b(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)(p,Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Vector ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#geoip"}),Object(r.b)("inlineCode",{parentName:"a"},"geoip"))," transform accepts ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to enrich events with geolocation data from the MaxMind GeoIP2 and GeoLite2 city databases."),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)(i.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED\n  type = "geoip" # must be: "geoip"\n  inputs = ["my-source-id"] # example\n  database = "/path/to/GeoLite2-City.mmdb" # example\n  source = "ip_address" # example\n\n  # OPTIONAL\n  target = "geoip" # default\n')),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)(o.a,{filters:!0,mdxType:"Fields"},Object(r.b)(c.a,{common:!0,defaultValue:null,enumValues:null,examples:["/path/to/GeoLite2-City.mmdb"],name:"database",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"database"},"database"),Object(r.b)("p",null,"Path to the MaxMind GeoIP2 or GeoLite2 binary city database file (",Object(r.b)("inlineCode",{parentName:"p"},"GeoLite2-City.mmdb"),"). Other databases, such as the the country database are not supported.")),Object(r.b)(c.a,{common:!0,defaultValue:null,enumValues:null,examples:["ip_address","x-forwarded-for"],name:"source",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"source"},"source"),Object(r.b)("p",null,"The field name that contains the IP address. This field should contain a valid IPv4 or IPv6 address.")),Object(r.b)(c.a,{common:!0,defaultValue:"geoip",enumValues:null,examples:["geoip"],name:"target",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"target"},"target"),Object(r.b)("p",null,"The default field to insert the resulting GeoIP data into. See ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#output"}),"output")," for more info."))),Object(r.b)("h2",{id:"output"},"Output"),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#geoip"}),Object(r.b)("inlineCode",{parentName:"a"},"geoip"))," transform accepts ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to enrich events with geolocation data from the MaxMind GeoIP2 and GeoLite2 city databases.\nFor example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  "geoip": {\n    "city_name": "New York",\n    "continent_code": [\n      "AF",\n      "Africa"\n    ],\n    "country_code": "US",\n    "latitude": "51.75",\n    "longitude": "-1.25",\n    "postal_code": "07094",\n    "timezone": "America/New_York"\n  }\n}\n')),Object(r.b)("p",null,"More detail on the output schema is below."),Object(r.b)(o.a,{filters:!0,mdxType:"Fields"},Object(r.b)(c.a,{defaultValue:null,enumValues:null,examples:null,name:"geoip",path:null,required:!1,type:"struct",mdxType:"Field"},Object(r.b)("h3",{id:"geoip"},"geoip"),Object(r.b)("p",null,"The root field containing all geolocation data as sub-fields."),Object(r.b)(o.a,{filters:!1,mdxType:"Fields"},Object(r.b)(c.a,{defaultValue:null,enumValues:null,examples:["New York","Brooklyn","Chicago"],name:"city_name",path:"geoip",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"city_name"},"city_name"),Object(r.b)("p",null,"The city name associated with the IP address.")),Object(r.b)(c.a,{defaultValue:null,enumValues:{AF:"Africa",AN:"Antarctica",AS:"Asia",EU:"Europe",NA:"North America",OC:"Oceania",SA:"South America"},examples:{AF:"Africa",AN:"Antarctica",AS:"Asia",EU:"Europe",NA:"North America",OC:"Oceania",SA:"South America"},name:"continent_code",path:"geoip",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"continent_code"},"continent_code"),Object(r.b)("p",null,"The continent code associated with the IP address.")),Object(r.b)(c.a,{defaultValue:null,enumValues:null,examples:["US","US-PR","FR","FR-BL","GB","A1","A2"],name:"country_code",path:"geoip",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"country_code"},"country_code"),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/ISO_3166-2"}),"ISO 3166-2 country codes")," associated with the IP address.")),Object(r.b)(c.a,{defaultValue:null,enumValues:null,examples:["51.75"],name:"latitude",path:"geoip",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"latitude"},"latitude"),Object(r.b)("p",null,"The latitude associated with the IP address.")),Object(r.b)(c.a,{defaultValue:null,enumValues:null,examples:["-1.25"],name:"longitude",path:"geoip",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"longitude"},"longitude"),Object(r.b)("p",null,"The longitude associated with the IP address.")),Object(r.b)(c.a,{defaultValue:null,enumValues:null,examples:["07094","10010","OX1"],name:"postal_code",path:"geoip",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"postal_code"},"postal_code"),Object(r.b)("p",null,"The postal code associated with the IP address.")),Object(r.b)(c.a,{defaultValue:null,enumValues:null,examples:["America/New_York","Asia/Atyrau","Europe/London"],name:"timezone",path:"geoip",required:!0,type:"string",mdxType:"Field"},Object(r.b)("h4",{id:"timezone"},"timezone"),Object(r.b)("p",null,"The timezone associated with the IP address in ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Tz_database#Names_of_time_zones"}),"IANA time zone format"),". A full list of time zones can be found ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"}),"here"),"."))))),Object(r.b)("h2",{id:"how-it-works"},"How It Works"),Object(r.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(r.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(r.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(r.b)("p",null,"You can learn more in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."))}b.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,r]=Object(n.useState)(!1),[i,o]=Object(n.useState)(!1),[c,s]=Object(n.useState)(null);let u=Array.isArray(e)?e:[e],d=u.some(e=>e.props.common),m=u.some(e=>e.props.required),p=u;return a&&(p=p.filter(e=>e.props.common)),i&&(p=p.filter(e=>e.props.required)),c&&(p=p.filter(e=>e.props.name.toLowerCase().includes(c.toLowerCase()))),l.a.createElement("div",{className:"fields"},u.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},p.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>s(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},d&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>r(e.currentTarget.checked),checked:a}),"common only"),m&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>o(e.currentTarget.checked),checked:i}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(p)||p.length>0?p:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),r=a(241),i=a.n(r),o=(a(242),a(244)),c=a(251);function s(e){return JSON.stringify(e)}function u(e){return e.includes(".")?'"'+e+'"':e}function d(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${u(t.name)} = ${s(t.value)}`:`${u(Object.keys(t)[0])} = ${s(Object.values(t)[0])}`:e?`${e} = ${s(t)}`:`${s(t)}`;var a}function m({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},s(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},s(n))),t.push(" ");return t}function p({name:e,path:t,value:a}){return l.a.createElement("code",null,d(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=d(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(o.a,{fileName:"vector.toml"}),l.a.createElement(c.a,{className:"language-toml"},n))}function h({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,s(a)))}function f({defaultValue:e,enumValues:t,examples:a,name:r,path:i,relevantWhen:o}){const[c,s]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(p,{name:r,path:i,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(m,{values:t})):null,o?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(h,{value:o})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>s(!c)},c?"Hide examples":"View examples"),c&&l.a.createElement("div",{className:"examples"},l.a.createElement(b,{name:r,path:i,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:o,name:c,path:s,relevantWhen:u,templateable:d,type:m,unit:p,required:b}){const[h,g]=Object(n.useState)(!1);let O=e;return h&&(O=O.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:i()("field","section",b?"field-required":"",h?"field-collapsed":""),required:b},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),d&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},m),r&&Object.keys(r).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),p&&l.a.createElement("span",{className:"badge badge--secondary"},p),b?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),O,!h&&l.a.createElement(f,{defaultValue:a,enumValues:r,examples:o,name:c,path:s,relevantWhen:u}))}}}]);