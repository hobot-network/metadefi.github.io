(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{181:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return m})),a.d(t,"rightToc",(function(){return u})),a.d(t,"default",(function(){return b}));var n=a(1),r=a(6),l=(a(0),a(242)),s=a(244),c=a(245),o=a(246),i={description:"The Vector `coercer` transform accepts `log` events and allows you to coerce log fields into fixed types.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+coercer%22",sidebar_label:'coercer|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/coercer.rs",status:"prod-ready",title:"Coercer Transform"},m={id:"reference/transforms/coercer",title:"Coercer Transform",description:"The Vector `coercer` transform accepts `log` events and allows you to coerce log fields into fixed types.",source:"@site/docs/reference/transforms/coercer.md",permalink:"/docs/reference/transforms/coercer",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/transforms/coercer.md",sidebar_label:'coercer|["log"]',sidebar:"docs",previous:{title:"AWS EC2 Metadata Transform",permalink:"/docs/reference/transforms/aws_ec2_metadata"},next:{title:"Concat Transform",permalink:"/docs/reference/transforms/concat"}},u=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"types",id:"types",children:[]}]},{value:"Output",id:"output",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Environment Variables",id:"environment-variables",children:[]}]}],p={rightToc:u},d="wrapper";function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)(d,Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"coercer")," transform accepts ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to coerce log fields into fixed types."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)(s.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED - General\n  type = "coercer" # must be: "coercer"\n  inputs = ["my-source-id"] # example\n\n  # OPTIONAL - Types\n  [transforms.my_transform_id.types]\n')),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)(c.a,{filters:!0,mdxType:"Fields"},Object(l.b)(o.a,{common:!0,defaultValue:null,enumValues:null,examples:[],name:"types",path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,mdxType:"Field"},Object(l.b)("h3",{id:"types"},"types"),Object(l.b)("p",null,"Key/Value pairs representing mapped log field types."),Object(l.b)(c.a,{filters:!1,mdxType:"Fields"},Object(l.b)(o.a,{common:!1,defaultValue:null,enumValues:{bool:'Coerces `"true"`/`/"false"`, `"1"`/`"0"`, and `"t"`/`"f"` values into boolean.',float:"Coerce to a 64 bit float.",int:"Coerce to a 64 bit integer.",string:"Coerce to a string.",timestamp:"Coerces to a Vector timestamp. [`strptime` specificiers][urls.strptime_specifiers] must be used to parse the string."},examples:[{status:"int"},{duration:"float"},{success:"bool"},{timestamp:"timestamp|%s"},{timestamp:"timestamp|%+"},{timestamp:"timestamp|%F"},{timestamp:"timestamp|%a %b %e %T %Y"}],name:"`[field-name]`",path:"types",relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(l.b)("h4",{id:"field-name"},Object(l.b)("inlineCode",{parentName:"h4"},"[field-name]")),Object(l.b)("p",null,"A definition of log field type conversions. They key is the log field name and the value is the type. ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.rs/chrono/0.3.1/chrono/format/strftime/index.html"}),Object(l.b)("inlineCode",{parentName:"a"},"strptime")," specifiers")," are supported for the ",Object(l.b)("inlineCode",{parentName:"p"},"timestamp")," type."))))),Object(l.b)("h2",{id:"output"},"Output"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"coercer")," transform accepts ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to coerce log fields into fixed types.\nFor example:"),Object(l.b)("p",null,"Given the following input:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  // ... existing fields\n  "bytes_in": "5667",\n  "bytes_out": "20574",\n  "host": "5.86.210.12",\n  "message": "GET /embrace/supply-chains/dynamic/vertical",\n  "status": "201",\n  "timestamp": "19/06/2019:17:20:49 -0400",\n  "user_id": "zieme4647"\n}\n')),Object(l.b)("p",null,"And the following configuration:"),Object(l.b)(s.a,{fileName:"vector.toml",mdxType:"CodeHeader"}),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.<transform-id>]\n  type = "coercer"\n\n[transforms.<transform-id>.types]\n  bytes_in = "int"\n  bytes_out = "int"\n  timestamp = "timestamp|%d/%m/%Y:%H:%M:%S %z"\n  status = "int"\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," event")," will be output with the following structure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  // ... existing fields\n  "bytes_in": 5667,\n  "bytes_out": 20574,\n  "host": "5.86.210.12",\n  "message": "GET /embrace/supply-chains/dynamic/vertical",\n  "status": 201,\n  "timestamp": <19/06/2019:17:20:49 -0400>,\n  "user_id": "zieme4647"\n}\n')),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."))}b.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),r=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,l]=Object(n.useState)(!1),[s,c]=Object(n.useState)(!1),[o,i]=Object(n.useState)(null);let m=Array.isArray(e)?e:[e],u=m.some(e=>e.props.common),p=m.some(e=>e.props.required),d=m;return a&&(d=d.filter(e=>e.props.common)),s&&(d=d.filter(e=>e.props.required)),o&&(d=d.filter(e=>e.props.name.toLowerCase().includes(o.toLowerCase()))),r.a.createElement("div",{className:"fields"},m.length>1&&!1!==t?r.a.createElement("div",{className:"filters"},r.a.createElement("span",{className:"result-count"},d.length," items"),r.a.createElement("div",{className:" search"},r.a.createElement("input",{type:"text",onChange:e=>i(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),r.a.createElement("div",{className:"checkboxes"},u&&r.a.createElement("label",{title:"Only show popular/common results"},r.a.createElement("input",{type:"checkbox",onChange:e=>l(e.currentTarget.checked),checked:a}),"common only"),p&&r.a.createElement("label",{title:"Only show required results"},r.a.createElement("input",{type:"checkbox",onChange:e=>c(e.currentTarget.checked),checked:s}),"required only"))):null,r.a.createElement("div",{className:"section-list"},!Array.isArray(d)||d.length>0?d:r.a.createElement("div",{className:"empty"},r.a.createElement("div",{className:"icon"},"\u2639"),r.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),r=a.n(n),l=a(241),s=a.n(l),c=(a(242),a(244)),o=a(251);function i(e){return JSON.stringify(e)}function m(e){return e.includes(".")?'"'+e+'"':e}function u(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${m(t.name)} = ${i(t.value)}`:`${m(Object.keys(t)[0])} = ${i(Object.values(t)[0])}`:e?`${e} = ${i(t)}`:`${i(t)}`;var a}function p({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(r.a.createElement("code",{key:n},i(n))),t.push(" ")}else for(var n in e)t.push(r.a.createElement("code",{key:n,title:e[n]},i(n))),t.push(" ");return t}function d({name:e,path:t,value:a}){return r.a.createElement("code",null,u(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=u(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),r.a.createElement("div",null,r.a.createElement(c.a,{fileName:"vector.toml"}),r.a.createElement(o.a,{className:"language-toml"},n))}function f({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return r.a.createElement("span",null,r.a.createElement("code",null,r.a.createElement("a",{href:`#${t}`},t))," = ",r.a.createElement("code",null,i(a)))}function h({defaultValue:e,enumValues:t,examples:a,name:l,path:s,relevantWhen:c}){const[o,i]=Object(n.useState)(!1);return e||t||a&&a.length>0?r.a.createElement("div",{className:"info"},void 0!==e?e?r.a.createElement("div",null,"Default: ",r.a.createElement(d,{name:l,path:s,value:e})):r.a.createElement("div",null,"No default"):null,t?r.a.createElement("div",null,"Enum, must be one of: ",r.a.createElement(p,{values:t})):null,c?r.a.createElement("div",null,"Only relevant when: ",r.a.createElement(f,{value:c})):null,r.a.createElement("div",null,r.a.createElement("div",{className:"show-more",onClick:()=>i(!o)},o?"Hide examples":"View examples"),o&&r.a.createElement("div",{className:"examples"},r.a.createElement(b,{name:l,path:s,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:l,examples:c,name:o,path:i,relevantWhen:m,templateable:u,type:p,unit:d,required:b}){const[f,g]=Object(n.useState)(!1);let v=e;return f&&(v=v.filter(e=>"p"!=e.props.originalType)),r.a.createElement("div",{className:s()("field","section",b?"field-required":"",f?"field-collapsed":""),required:b},r.a.createElement("div",{className:"badges"},t&&r.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),u&&r.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),r.a.createElement("span",{className:"badge badge--secondary"},p),l&&Object.keys(l).length>0&&r.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),d&&r.a.createElement("span",{className:"badge badge--secondary"},d),b?r.a.createElement("span",{className:"badge badge--danger"},"required"):r.a.createElement("span",{className:"badge badge--secondary"},"optional")),v,!f&&r.a.createElement(h,{defaultValue:a,enumValues:l,examples:c,name:o,path:i,relevantWhen:m}))}}}]);