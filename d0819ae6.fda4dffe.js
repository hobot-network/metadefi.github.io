(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{217:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return m})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return v}));var n=a(1),l=a(6),s=(a(0),a(242)),r=a(247),c=a(248),i=a(244),o=a(245),u=a(246),m={delivery_guarantee:"best_effort",description:"The Vector `statsd` sink streams `metric` events to StatsD metrics service.",event_types:["metric"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22sink%3A+statsd%22",operating_systems:["linux","macos","windows"],sidebar_label:'statsd|["metric"]',source_url:"https://github.com/timberio/vector/tree/master/src/sinks/statsd.rs",status:"beta",title:"Statsd Sink",unsupported_operating_systems:[]},d={id:"reference/sinks/statsd",title:"Statsd Sink",description:"The Vector `statsd` sink streams `metric` events to StatsD metrics service.",source:"@site/docs/reference/sinks/statsd.md",permalink:"/docs/reference/sinks/statsd",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/sinks/statsd.md",sidebar_label:'statsd|["metric"]',sidebar:"docs",previous:{title:"Splunk HEC Sink",permalink:"/docs/reference/sinks/splunk_hec"},next:{title:"Vector Sink",permalink:"/docs/reference/sinks/vector"}},b=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"address",id:"address",children:[]},{value:"healthcheck",id:"healthcheck",children:[]},{value:"namespace",id:"namespace",children:[]}]},{value:"Output",id:"output",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Streaming",id:"streaming",children:[]}]}],p={rightToc:b},h="wrapper";function v(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(s.b)(h,Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"The Vector ",Object(s.b)("inlineCode",{parentName:"p"},"statsd")," sink ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#streaming"}),"streams")," ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(s.b)("inlineCode",{parentName:"a"},"metric"))," events to ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/statsd/statsd"}),"StatsD")," metrics service."),Object(s.b)("h2",{id:"configuration"},"Configuration"),Object(s.b)(r.a,{block:!0,defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(s.b)(c.a,{value:"common",mdxType:"TabItem"},Object(s.b)(i.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[sinks.my_sink_id]\n  # REQUIRED\n  type = "statsd" # must be: "statsd"\n  inputs = ["my-source-id"] # example\n  namespace = "service" # example\n\n  # OPTIONAL\n  address = "127.0.0.1:8125" # default\n'))),Object(s.b)(c.a,{value:"advanced",mdxType:"TabItem"},Object(s.b)(i.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[sinks.my_sink_id]\n  # REQUIRED\n  type = "statsd" # must be: "statsd"\n  inputs = ["my-source-id"] # example\n  namespace = "service" # example\n\n  # OPTIONAL\n  address = "127.0.0.1:8125" # default\n  healthcheck = true # default\n')))),Object(s.b)("h2",{id:"options"},"Options"),Object(s.b)(o.a,{filters:!0,mdxType:"Fields"},Object(s.b)(u.a,{common:!0,defaultValue:"127.0.0.1:8125",enumValues:null,examples:["127.0.0.1:8125"],name:"address",path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"address"},"address"),Object(s.b)("p",null,"The UDP socket address to send stats to.")),Object(s.b)(u.a,{common:!1,defaultValue:!0,enumValues:null,examples:[!0,!1],name:"healthcheck",path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"healthcheck"},"healthcheck"),Object(s.b)("p",null,"Enables/disables the sink healthcheck upon start.")),Object(s.b)(u.a,{common:!0,defaultValue:null,enumValues:null,examples:["service"],name:"namespace",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(s.b)("h3",{id:"namespace"},"namespace"),Object(s.b)("p",null,"A prefix that will be added to all metric names."))),Object(s.b)("h2",{id:"output"},"Output"),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"statsd")," sink ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#streaming"}),"streams")," ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(s.b)("inlineCode",{parentName:"a"},"metric"))," events to ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/statsd/statsd"}),"StatsD")," metrics service.\nFor example:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"gorets:1|c\nglork:320|ms\ngaugor:333|g\nuniques:765|s\n")),Object(s.b)("h2",{id:"how-it-works"},"How It Works"),Object(s.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(s.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(s.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(s.b)("p",null,"You can learn more in the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."),Object(s.b)("h3",{id:"streaming"},"Streaming"),Object(s.b)("p",null,"The ",Object(s.b)("inlineCode",{parentName:"p"},"statsd")," sink streams data on a real-time\nevent-by-event basis. It does not batch data."))}v.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,s]=Object(n.useState)(!1),[r,c]=Object(n.useState)(!1),[i,o]=Object(n.useState)(null);let u=Array.isArray(e)?e:[e],m=u.some(e=>e.props.common),d=u.some(e=>e.props.required),b=u;return a&&(b=b.filter(e=>e.props.common)),r&&(b=b.filter(e=>e.props.required)),i&&(b=b.filter(e=>e.props.name.toLowerCase().includes(i.toLowerCase()))),l.a.createElement("div",{className:"fields"},u.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},b.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>o(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},m&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>s(e.currentTarget.checked),checked:a}),"common only"),d&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>c(e.currentTarget.checked),checked:r}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(b)||b.length>0?b:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),s=a(241),r=a.n(s),c=(a(242),a(244)),i=a(251);function o(e){return JSON.stringify(e)}function u(e){return e.includes(".")?'"'+e+'"':e}function m(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${u(t.name)} = ${o(t.value)}`:`${u(Object.keys(t)[0])} = ${o(Object.values(t)[0])}`:e?`${e} = ${o(t)}`:`${o(t)}`;var a}function d({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},o(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},o(n))),t.push(" ");return t}function b({name:e,path:t,value:a}){return l.a.createElement("code",null,m(null,a))}function p({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=m(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(c.a,{fileName:"vector.toml"}),l.a.createElement(i.a,{className:"language-toml"},n))}function h({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,o(a)))}function v({defaultValue:e,enumValues:t,examples:a,name:s,path:r,relevantWhen:c}){const[i,o]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(b,{name:s,path:r,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(d,{values:t})):null,c?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(h,{value:c})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>o(!i)},i?"Hide examples":"View examples"),i&&l.a.createElement("div",{className:"examples"},l.a.createElement(p,{name:s,path:r,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:s,examples:c,name:i,path:o,relevantWhen:u,templateable:m,type:d,unit:b,required:p}){const[h,f]=Object(n.useState)(!1);let O=e;return h&&(O=O.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:r()("field","section",p?"field-required":"",h?"field-collapsed":""),required:p},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),m&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},d),s&&Object.keys(s).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),b&&l.a.createElement("span",{className:"badge badge--secondary"},b),p?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),O,!h&&l.a.createElement(v,{defaultValue:a,enumValues:s,examples:c,name:i,path:o,relevantWhen:u}))}},247:function(e,t,a){"use strict";var n=a(1),l=a(0),s=a.n(l),r=a(252),c=a(241),i=a.n(c),o=a(253),u=a.n(o);function m({block:e,centered:t,className:a,style:n,values:l,selectedValue:r,setSelectedValue:c}){return s.a.createElement("div",{className:t?"tabs--centered":""},s.a.createElement("ul",{className:i()("tabs",a,{"tabs--block":e}),style:n},l.map(({value:e,label:t})=>s.a.createElement("li",{className:i()("tab-item",{"tab-item--active":r===e}),key:e,onClick:()=>c(e)},t))))}function d({selectedValue:e,setSelectedValue:t,values:a}){return s.a.createElement(r.a,{className:"react-select-container",classNamePrefix:"react-select",options:a,isClearable:!1,placeholder:"Select a version...",value:a.find(t=>t.value==e),onChange:e=>t(e?e.value:null)})}t.a=function(e){const{block:t,centered:a,children:r,defaultValue:c,select:i,style:o,values:b,urlKey:p}=e,[h,v]=Object(l.useState)(c);return Object(l.useEffect)(()=>{if("undefined"!=typeof window&&window.location&&p){let e=u.a.parse(window.location.search);e[p]&&v(e[p])}},[]),s.a.createElement("div",null,b.length>1&&(i?s.a.createElement(d,Object(n.a)({selectedValue:h,setSelectedValue:v},e)):s.a.createElement(m,Object(n.a)({selectedValue:h,setSelectedValue:v},e))),s.a.createElement("div",{className:"margin-vert--md"},l.Children.toArray(r).filter(e=>e.props.value===h)[0]))}},248:function(e,t,a){"use strict";var n=a(0),l=a.n(n);t.a=function(e){return l.a.createElement("div",null,e.children)}}}]);