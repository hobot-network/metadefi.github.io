(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{172:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(1),l=a(6),i=(a(0),a(242)),c=a(247),o=a(248),r={title:"Validating",description:"How to validation Vector's configuration to ensure it is error free before applying it."},s={id:"administration/validating",title:"Validating",description:"How to validation Vector's configuration to ensure it is error free before applying it.",source:"@site/docs/administration/validating.md",permalink:"/docs/administration/validating",editUrl:"https://github.com/brainrexapi/edit/master/docs/administration/validating.md",sidebar:"docs",previous:{title:"Updating",permalink:"/docs/administration/updating"},next:{title:"Glossary",permalink:"/docs/meta/glossary"}},b=[{value:"Validating Environment",id:"validating-environment",children:[]}],d={rightToc:b},u="wrapper";function p(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(i.b)(u,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Vector provides a subcommand ",Object(i.b)("inlineCode",{parentName:"p"},"validate")," which checks the validity of any number\nof configuration files and then exits:"),Object(i.b)(c.a,{block:!0,defaultValue:"fields",values:[{label:"Fields Only",value:"fields"},{label:"Fields and Topology",value:"topology"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"fields",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector validate /etc/vector/vector.toml\n"))),Object(i.b)(o.a,{value:"topology",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector validate --topology /etc/vector/*.toml\n")))),Object(i.b)("p",null,"The validate subcommand checks the correctness of fields for components defined\nwithin a configuration file, including:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"All ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sources/"}),"sources"),", ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/transforms/"}),"transforms"),", and\n",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sinks/"}),"sinks")," include all non-optional fields."),Object(i.b)("li",{parentName:"ol"},"All fields are of the proper ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/setup/configuration/#value-types"}),"type"),".")),Object(i.b)("p",null,"If validation fails, Vector will exit with a ",Object(i.b)("inlineCode",{parentName:"p"},"78"),", and if validation succeeds\nVector will exit with a ",Object(i.b)("inlineCode",{parentName:"p"},"0"),"."),Object(i.b)("p",null,"These checks can be expanded with flags such as ",Object(i.b)("inlineCode",{parentName:"p"},"--topology"),", which causes\n",Object(i.b)("inlineCode",{parentName:"p"},"validate")," to also verify that the configuration file contains a valid topology,\nexpanding the above checks with the following:"),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"At least one ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sources/"}),"source")," is defined."),Object(i.b)("li",{parentName:"ol"},"At least one ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sinks/"}),"sink")," is defined."),Object(i.b)("li",{parentName:"ol"},"All ",Object(i.b)("inlineCode",{parentName:"li"},"inputs")," values contain at least one value (cannot be empty)."),Object(i.b)("li",{parentName:"ol"},"All ",Object(i.b)("inlineCode",{parentName:"li"},"inputs")," values reference valid and upstream ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sources/"}),"source")," or\n",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/transforms/"}),"transform")," components.")),Object(i.b)("p",null,"To see other customization options for the ",Object(i.b)("inlineCode",{parentName:"p"},"validate")," subcommand run\n",Object(i.b)("inlineCode",{parentName:"p"},"vector validate --help"),"."),Object(i.b)("h2",{id:"validating-environment"},"Validating Environment"),Object(i.b)("p",null,"Vector also provides a ",Object(i.b)("inlineCode",{parentName:"p"},"--dry-run")," option which prevents regular execution and\ninstead validates a configuration file as well as the runtime environment:"),Object(i.b)(c.a,{block:!0,defaultValue:"config",values:[{label:"Config Only",value:"config"},{label:"Config + Healthchecks",value:"config_healthchecks"}],mdxType:"Tabs"},Object(i.b)(o.a,{value:"config",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector --config /etc/vector/vector.toml --dry-run\n"))),Object(i.b)(o.a,{value:"config_healthchecks",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"vector --config /etc/vector/vector.toml --dry-run --require-healthy\n")))),Object(i.b)("p",null,"If a dry run fails, Vector will exit with a ",Object(i.b)("inlineCode",{parentName:"p"},"78"),", and if it succeeds Vector\nwill exit with a ",Object(i.b)("inlineCode",{parentName:"p"},"0"),"."),Object(i.b)("p",null,"A dry run expands upon the ",Object(i.b)("inlineCode",{parentName:"p"},"validation")," checks above with the following:"),Object(i.b)("ol",{start:7},Object(i.b)("li",{parentName:"ol"},"All components are capable of running (data directories exist, are writable,\netc).")),Object(i.b)("p",null,"You'll notice in the second example above you can pass the ",Object(i.b)("inlineCode",{parentName:"p"},"--require-healthy"),"\nflag to also run health checks for all defined sinks."),Object(i.b)("ol",{start:8},Object(i.b)("li",{parentName:"ol"},"All ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/reference/sinks/"}),"sinks")," are able to connect to their targets.")))}p.isMDXComponent=!0},247:function(e,t,a){"use strict";var n=a(1),l=a(0),i=a.n(l),c=a(252),o=a(241),r=a.n(o),s=a(253),b=a.n(s);function d({block:e,centered:t,className:a,style:n,values:l,selectedValue:c,setSelectedValue:o}){return i.a.createElement("div",{className:t?"tabs--centered":""},i.a.createElement("ul",{className:r()("tabs",a,{"tabs--block":e}),style:n},l.map(({value:e,label:t})=>i.a.createElement("li",{className:r()("tab-item",{"tab-item--active":c===e}),key:e,onClick:()=>o(e)},t))))}function u({selectedValue:e,setSelectedValue:t,values:a}){return i.a.createElement(c.a,{className:"react-select-container",classNamePrefix:"react-select",options:a,isClearable:!1,placeholder:"Select a version...",value:a.find(t=>t.value==e),onChange:e=>t(e?e.value:null)})}t.a=function(e){const{block:t,centered:a,children:c,defaultValue:o,select:r,style:s,values:p,urlKey:m}=e,[f,h]=Object(l.useState)(o);return Object(l.useEffect)(()=>{if("undefined"!=typeof window&&window.location&&m){let e=b.a.parse(window.location.search);e[m]&&h(e[m])}},[]),i.a.createElement("div",null,p.length>1&&(r?i.a.createElement(u,Object(n.a)({selectedValue:f,setSelectedValue:h},e)):i.a.createElement(d,Object(n.a)({selectedValue:f,setSelectedValue:h},e))),i.a.createElement("div",{className:"margin-vert--md"},l.Children.toArray(c).filter(e=>e.props.value===f)[0]))}},248:function(e,t,a){"use strict";var n=a(0),l=a.n(n);t.a=function(e){return l.a.createElement("div",null,e.children)}}}]);