(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{155:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return m})),a.d(t,"rightToc",(function(){return u})),a.d(t,"default",(function(){return b}));var n=a(1),l=a(6),r=(a(0),a(242)),i=a(244),o=a(245),c=a(246),s={description:"The Vector `field_filter` transform accepts `log` and `metric` events and allows you to filter events by a log field's value.",event_types:["log","metric"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+field_filter%22",sidebar_label:'field_filter|["log","metric"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/field_filter.rs",status:"beta",title:"Field Filter Transform"},m={id:"reference/transforms/field_filter",title:"Field Filter Transform",description:"The Vector `field_filter` transform accepts `log` and `metric` events and allows you to filter events by a log field's value.",source:"@site/docs/reference/transforms/field_filter.md",permalink:"/docs/reference/transforms/field_filter",editUrl:"https://github.com/brainrexapi/edit/master/docs/reference/transforms/field_filter.md",sidebar_label:'field_filter|["log","metric"]',sidebar:"docs",previous:{title:"Concat Transform",permalink:"/docs/reference/transforms/concat"},next:{title:"GeoIP Transform",permalink:"/docs/reference/transforms/geoip"}},u=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"field",id:"field",children:[]},{value:"value",id:"value",children:[]}]},{value:"How It Works",id:"how-it-works",children:[{value:"Complex Comparisons",id:"complex-comparisons",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]}]}],d={rightToc:u},p="wrapper";function b(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)(p,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Vector ",Object(r.b)("inlineCode",{parentName:"p"},"field_filter")," transform accepts ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(r.b)("inlineCode",{parentName:"a"},"log"))," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/metric/"}),Object(r.b)("inlineCode",{parentName:"a"},"metric"))," events and allows you to filter events by a log field's value."),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)(i.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  type = "field_filter" # must be: "field_filter"\n  inputs = ["my-source-id"] # example\n  field = "file" # example\n  value = "/var/log/nginx.log" # example\n')),Object(r.b)("h2",{id:"options"},"Options"),Object(r.b)(o.a,{filters:!0,mdxType:"Fields"},Object(r.b)(c.a,{common:!0,defaultValue:null,enumValues:null,examples:["file"],name:"field",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"field"},"field"),Object(r.b)("p",null,"The target log field to compare against the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#value"}),Object(r.b)("inlineCode",{parentName:"a"},"value")),".")),Object(r.b)(c.a,{common:!0,defaultValue:null,enumValues:null,examples:["/var/log/nginx.log"],name:"value",path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(r.b)("h3",{id:"value"},"value"),Object(r.b)("p",null,"If the value of the specified ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#field"}),Object(r.b)("inlineCode",{parentName:"a"},"field"))," matches this value then the event will be permitted, otherwise it is dropped."))),Object(r.b)("h2",{id:"how-it-works"},"How It Works"),Object(r.b)("h3",{id:"complex-comparisons"},"Complex Comparisons"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"field_filter")," transform is designed for simple equality filtering, it is\nnot designed for complex comparisons. There are plans to build a ",Object(r.b)("inlineCode",{parentName:"p"},"filter"),"\ntransform that accepts more complex filtering."),Object(r.b)("p",null,"We've opened ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/timberio/vector/issues/479"}),"issue 479")," for more complex filtering."),Object(r.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(r.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(r.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(r.b)("p",null,"You can learn more in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."))}b.isMDXComponent=!0},245:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(85);t.a=function({children:e,filters:t}){const[a,r]=Object(n.useState)(!1),[i,o]=Object(n.useState)(!1),[c,s]=Object(n.useState)(null);let m=Array.isArray(e)?e:[e],u=m.some(e=>e.props.common),d=m.some(e=>e.props.required),p=m;return a&&(p=p.filter(e=>e.props.common)),i&&(p=p.filter(e=>e.props.required)),c&&(p=p.filter(e=>e.props.name.toLowerCase().includes(c.toLowerCase()))),l.a.createElement("div",{className:"fields"},m.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},p.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>s(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},u&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>r(e.currentTarget.checked),checked:a}),"common only"),d&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>o(e.currentTarget.checked),checked:i}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(p)||p.length>0?p:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},246:function(e,t,a){"use strict";a(12);var n=a(0),l=a.n(n),r=a(241),i=a.n(r),o=(a(242),a(244)),c=a(251);function s(e){return JSON.stringify(e)}function m(e){return e.includes(".")?'"'+e+'"':e}function u(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${m(t.name)} = ${s(t.value)}`:`${m(Object.keys(t)[0])} = ${s(Object.values(t)[0])}`:e?`${e} = ${s(t)}`:`${s(t)}`;var a}function d({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},s(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},s(n))),t.push(" ");return t}function p({name:e,path:t,value:a}){return l.a.createElement("code",null,u(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=u(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(o.a,{fileName:"vector.toml"}),l.a.createElement(c.a,{className:"language-toml"},n))}function f({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,s(a)))}function h({defaultValue:e,enumValues:t,examples:a,name:r,path:i,relevantWhen:o}){const[c,s]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(p,{name:r,path:i,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(d,{values:t})):null,o?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(f,{value:o})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>s(!c)},c?"Hide examples":"View examples"),c&&l.a.createElement("div",{className:"examples"},l.a.createElement(b,{name:r,path:i,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:o,name:c,path:s,relevantWhen:m,templateable:u,type:d,unit:p,required:b}){const[f,v]=Object(n.useState)(!1);let g=e;return f&&(g=g.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:i()("field","section",b?"field-required":"",f?"field-collapsed":""),required:b},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),u&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},d),r&&Object.keys(r).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),p&&l.a.createElement("span",{className:"badge badge--secondary"},p),b?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),g,!f&&l.a.createElement(h,{defaultValue:a,enumValues:r,examples:o,name:c,path:s,relevantWhen:m}))}}}]);